name: 'Sonatype Lifecycle GitHub Action'
author: 'Sonatype Community'
description: 'Run a Sonatype Lifecycle policy evaluation as part of your GitHub Actions workflow.'
inputs:
  serverUrl:
    description: 'Sonatype Lifecycle Server URL'
    required: true
  username:
    description: 'Username to connect to Sonatype Lifecycle Server for policy evaluation. Can be the first part of a User Token.'
    required: true
  password:
    description: 'Password to connect to Sonatype Lifecycle Server for policy evaluation. Can be the second part of a User Token.'
    required: true
  applicationId:
    description: 'Determines the policy elements (policies, labels, and license threat groups) to associate with this build, and is managed via the Sonatype Lifecycle Server.'
    required: true
  stage:
    description: 'Controls the stage the policy evaluation will be run against on the Sonatype Lifecycle Server.'
    required: true
    default: 'Build'
  target:
    description: 'The scan target path - can be an archive or directory. Value will be prefixed by `$GITHUB_WORKSPACE`. Default will be the entire GitHub Workspace.'
    required: true
    default: "/"
  debug:
    description: 'Whether to enable Debug Logging. Set to `true` to enable. **Not recommended to enable in Production Environments.** *Added in v2.0.0*.'
    required: false
    default: 'false'
  proxy:
    description: 'Proxy host in the format <host[:port]> if you need to transit a Proxy to connect to your Sonatype Lifecycle Server. *Added in v2.0.0*.'
    required: false
  proxyUser:
    description: 'Proxy username and password in the format <username:password> if you need to transit a Proxy to connect to your Sonatype Lifecycle Server and it requires authentication. *Added in v2.0.0*.'
    required: false
  writePolicyEvaluationJson:
    description: 'Whether to keep a copy of the Policy Evaluation JSON file or not. If set to `true`, it will be written to `$GITHUB_WORKSPACE/sonatype-lifecycle-policy-eval.json`. *Added in v2.1.0*.'
    required: false
    default: 'false'
runs:
  using: 'docker'
  image: 'Dockerfile'
  args:
    - ${{ inputs.serverUrl }}
    - ${{ inputs.username }}
    - ${{ inputs.password }}
    - ${{ inputs.applicationId }}
    - ${{ inputs.stage }}
    - ${{ inputs.target }}
    - ${{ inputs.debug }}
    - ${{ inputs.proxy }}
    - ${{ inputs.proxyUser }}
    - ${{ inputs.writePolicyEvaluationJson }}
branding:
  icon: 'shield'
  color: 'gray-dark'